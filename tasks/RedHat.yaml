---
- name: Set up local repository
  block:
    - file:
        path: /opt/repo
        state: directory
    - unarchive:
        src: kube-rpm.tar.gz
        dest: /opt/repo/
        creates: /opt/repo/kube-rpm/repodata/repomd.xml
    - yum_repository:
        name: kube-rpm
        description: local rpms for kube
        baseurl: file:///opt/repo/kube-rpm
        gpgcheck: no
        enabled: no
  when: offline_install

- name: Install local packages
  yum:
    name: '{{ item }}'
    state: present
    disablerepo: *
    enablerepo: kube-rpm
  with_items:
    - epel-release
    - docker
    - kubelet
    - kubeadm
    - kubectl
  
- copy:
    dest: /etc/yum.repos.d/kubernetes.repo
    content: |
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  when: not offline_install

- name: Install Epel
  package: name=epel-release state=installed
  when: not offline_install

- name: Install packages
  package: name=docker state=installed
  when: not offline_install

- name: Start docker service
  service: name=docker state=started enabled=yes
  when: not offline_install

- name: import gpg key
  rpm_key:
    key: https://packages.cloud.google.com/yum/doc/yum-key.gpg
    state: present
  register: import_key
  when: not offline_install
                                                                                                       
- name: Make cache
  command: "yum -q makecache -y --disablerepo='*' --enablerepo='kubernetes'"
  when: import_key.changed and not offline_install
  when: not offline_install

- name: Install packages
  package: name=kubelet,kubeadm,kubectl state=present
  when: not offline_install

- name: Start kubelet service
  service: name=kubelet state=started enabled=yes

- lineinfile:
    path: /etc/sysctl.d/k8s.conf
    regexp: '^net.bridge.bridge-nf-call-ip6tables'
    line: 'net.bridge.bridge-nf-call-ip6tables = 1'
    create: yes
  notify: sysctl-system

- lineinfile:
    path: /etc/sysctl.d/k8s.conf
    regexp: '^net.bridge.bridge-nf-call-iptables'
    line: 'net.bridge.bridge-nf-call-iptables = 1'
    create: yes
  notify: sysctl-system

- name: Stop and disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: False
  ignore_errors: yes

- name: Include "{{kube_type_of_node}}" tasks
  include: "{{kube_type_of_node}}.yaml"

